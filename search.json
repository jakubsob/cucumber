[{"path":"https://jakubsob.github.io/cucumber/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 cucumber authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jakubsob.github.io/cucumber/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jakub Sobolewski. Author, maintainer.","code":""},{"path":"https://jakubsob.github.io/cucumber/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sobolewski J (2024). cucumber: Implementation Cucumber Framework R. R package version 0.0.0.9000, https://jakubsob.github.io/cucumber/, https://github.com/jakubsob/cucumber.","code":"@Manual{,   title = {cucumber: An Implementation Of Cucumber Framework For R},   author = {Jakub Sobolewski},   year = {2024},   note = {R package version 0.0.0.9000, https://jakubsob.github.io/cucumber/},   url = {https://github.com/jakubsob/cucumber}, }"},{"path":"https://jakubsob.github.io/cucumber/index.html","id":"cucumber-","dir":"","previous_headings":"","what":"Behavior-Driven Development in R","title":"Behavior-Driven Development in R","text":"implementation Cucumber testing framework R. Fully native, external dependencies.","code":""},{"path":"https://jakubsob.github.io/cucumber/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Behavior-Driven Development in R","text":"package parses Gherkin documents allows write tests shown : running : default command look Feature files tests/testthat directory step definitions tests/testthat/steps directory. can change defaults providing feature_path steps_path arguments cucumber::test() function.","code":"# tests/testthat/addition.feature Feature: Addition   Scenario: Adding 2 integers     When I add 1 and 1     Then the result is 2   Scenario: Adding integer and float     When I add 1 and 1.1     Then the result is 2.1   Scenario: Adding float and float     When I add 1.1 and 1.1     Then the result is 2.2 # tests/testthat/steps/steps_definitions.R when(\"I add {int} and {int}\", function(x, y, context) {   context$result <- x + y })  then(\"the result is {int}\", function(expected, context) {   expect_equal(context$result, expected) })  when(\"I add {int} and {float}\", function(x, y, context) {   context$result <- x + y })  when(\"I add {float} and {float}\", function(x, y, context) {   context$result <- x + y })  then(\"the result is {float}\", function(expected, context) {   expect_equal(context$result, expected) }) cucumber::test()"},{"path":"https://jakubsob.github.io/cucumber/index.html","id":"how-it-works","dir":"","previous_headings":"","what":"How it works","title":"Behavior-Driven Development in R","text":".feature files parsed matched step definitions. Step functions defined using: - description: cucumber expression. - implementation function. must parameters matched description context parameter - environment managing state steps. step parsed one .feature files found, error thrown.","code":""},{"path":"https://jakubsob.github.io/cucumber/index.html","id":"parameter-types","dir":"","previous_headings":"How it works","what":"Parameter types","title":"Behavior-Driven Development in R","text":"Step implementations receive data .feature files parameters. values detected via regular expressions casted transformer function. following parameter types available default: See cucumber::define_parameter_type() define parameter types.","code":""},{"path":"https://jakubsob.github.io/cucumber/index.html","id":"supported-gherkin-syntax","dir":"","previous_headings":"","what":"Supported Gherkin syntax:","title":"Behavior-Driven Development in R","text":"Feature Scenario Example Given Background Scenario Outline (Scenario Template) Examples (Scenarios) \"\"\" (Doc Strings) | (Data Tables) @ (Tags) # (Comments) goal support listed features. See Gherkin Reference write Gherkin documents.","code":""},{"path":"https://jakubsob.github.io/cucumber/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Behavior-Driven Development in R","text":"can install development version cucumber GitHub :","code":"devtools::install_github(\"jakubsob/cucumber\")"},{"path":"https://jakubsob.github.io/cucumber/reference/define_parameter_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Define Parameter Type — define_parameter_type","title":"Define Parameter Type — define_parameter_type","text":"Add new parameter list parameters can used step definitions.","code":""},{"path":"https://jakubsob.github.io/cucumber/reference/define_parameter_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define Parameter Type — define_parameter_type","text":"","code":"define_parameter_type(name, regexp, transformer)"},{"path":"https://jakubsob.github.io/cucumber/reference/define_parameter_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define Parameter Type — define_parameter_type","text":"name name parameter. regexp regular expression parameter match . transformer function transform parameter string desired type. Must funcion requires single argument.","code":""},{"path":"https://jakubsob.github.io/cucumber/reference/define_parameter_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define Parameter Type — define_parameter_type","text":"","code":"define_parameter_type(\"color\", \"red|blue|green\", as.character) define_parameter_type(\"sci_number\", \"[+-]?\\\\d*\\\\.?\\\\d+(e[+-]?\\\\d+)?\", as.numeric)"},{"path":"https://jakubsob.github.io/cucumber/reference/step.html","id":null,"dir":"Reference","previous_headings":"","what":"Step — step","title":"Step — step","text":"implementation function always last parameter named `context`. holds environment state stored.","code":""},{"path":"https://jakubsob.github.io/cucumber/reference/step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step — step","text":"","code":"given(description, implementation)  when(description, implementation)  then(description, implementation)"},{"path":"https://jakubsob.github.io/cucumber/reference/step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step — step","text":"description description step. implementation function run step executed.","code":""},{"path":"https://jakubsob.github.io/cucumber/reference/step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Step — step","text":"None, funcion called side effects.","code":""},{"path":"https://jakubsob.github.io/cucumber/reference/step.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Step — step","text":"Named arguments precede `context` considered parameters. step description \"int cucumbers basket\" implementation function `function(n_cucumbers, context)`. int value passed `n_cucumbers`, parameter can name. step table, table passed argument next inline parameters `context`. See `inst/examples/table` write implemntation uses tables.","code":""},{"path":"https://jakubsob.github.io/cucumber/reference/test.html","id":null,"dir":"Reference","previous_headings":"","what":"Run all Cucumber tests — test","title":"Run all Cucumber tests — test","text":"command runs Cucumber tests. takes .feature files `features_dir` runs using steps `steps_dir`.","code":""},{"path":"https://jakubsob.github.io/cucumber/reference/test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run all Cucumber tests — test","text":"","code":"test(   features_dir = getOption(\"cucumber_features_dir\", \"tests/testthat\"),   steps_dir = getOption(\"cucumber_steps_dir\", \"tests/testthat/steps\") )"},{"path":"https://jakubsob.github.io/cucumber/reference/test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run all Cucumber tests — test","text":"features_dir character string directory containing feature files. default checks \"tests/testthat\" directory. setup different, default directory use `option(cucumber_features_dir = \"path///features\")`. steps_dir character string directory containing step files. default checks \"tests/testthat/steps\" directory. setup different, default directory use `option(cucumber_steps_dir = \"path///steps\")`.","code":""},{"path":[]}]
